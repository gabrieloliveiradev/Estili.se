import { AfterViewChecked, AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
/**
 * Slick component
 */
import * as ɵngcc0 from '@angular/core';
export declare class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {
    private el;
    private zone;
    private platformId;
    config: any;
    afterChange: EventEmitter<{
        event: any;
        slick: any;
        currentSlide: number;
        first: boolean;
        last: boolean;
    }>;
    beforeChange: EventEmitter<{
        event: any;
        slick: any;
        currentSlide: number;
        nextSlide: number;
    }>;
    breakpoint: EventEmitter<{
        event: any;
        slick: any;
        breakpoint: any;
    }>;
    destroy: EventEmitter<{
        event: any;
        slick: any;
    }>;
    init: EventEmitter<{
        event: any;
        slick: any;
    }>;
    $instance: any;
    private currentIndex;
    slides: any[];
    initialized: boolean;
    private _removedSlides;
    private _addedSlides;
    /**
     * Constructor
     */
    constructor(el: ElementRef, zone: NgZone, platformId: string);
    /**
     * On component destroy
     */
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    /**
     * On component view checked
     */
    ngAfterViewChecked(): void;
    /**
     * init slick
     */
    initSlick(): void;
    addSlide(slickItem: SlickItemDirective): void;
    removeSlide(slickItem: SlickItemDirective): void;
    /**
     * Slick Method
     */
    slickGoTo(index: number): void;
    slickNext(): void;
    slickPrev(): void;
    slickPause(): void;
    slickPlay(): void;
    unslick(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SlickCarouselComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SlickCarouselComponent, "ngx-slick-carousel", ["slick-carousel"], { "config": "config"; }, { "afterChange": "afterChange"; "beforeChange": "beforeChange"; "breakpoint": "breakpoint"; "destroy": "destroy"; "init": "init"; }, never, ["*"]>;
}
export declare class SlickItemDirective implements OnInit, OnDestroy {
    el: ElementRef;
    private platformId;
    private carousel;
    constructor(el: ElementRef, platformId: string, carousel: SlickCarouselComponent);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SlickItemDirective, [null, null, { host: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SlickItemDirective, "[ngxSlickItem]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpY2suY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNsaWNrLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdDaGVja2VkLCBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBTbGljayBjb21wb25lbnRcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2xpY2tDYXJvdXNlbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0LCBBZnRlclZpZXdDaGVja2VkIHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgY29uZmlnOiBhbnk7XG4gICAgYWZ0ZXJDaGFuZ2U6IEV2ZW50RW1pdHRlcjx7XG4gICAgICAgIGV2ZW50OiBhbnk7XG4gICAgICAgIHNsaWNrOiBhbnk7XG4gICAgICAgIGN1cnJlbnRTbGlkZTogbnVtYmVyO1xuICAgICAgICBmaXJzdDogYm9vbGVhbjtcbiAgICAgICAgbGFzdDogYm9vbGVhbjtcbiAgICB9PjtcbiAgICBiZWZvcmVDaGFuZ2U6IEV2ZW50RW1pdHRlcjx7XG4gICAgICAgIGV2ZW50OiBhbnk7XG4gICAgICAgIHNsaWNrOiBhbnk7XG4gICAgICAgIGN1cnJlbnRTbGlkZTogbnVtYmVyO1xuICAgICAgICBuZXh0U2xpZGU6IG51bWJlcjtcbiAgICB9PjtcbiAgICBicmVha3BvaW50OiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBldmVudDogYW55O1xuICAgICAgICBzbGljazogYW55O1xuICAgICAgICBicmVha3BvaW50OiBhbnk7XG4gICAgfT47XG4gICAgZGVzdHJveTogRXZlbnRFbWl0dGVyPHtcbiAgICAgICAgZXZlbnQ6IGFueTtcbiAgICAgICAgc2xpY2s6IGFueTtcbiAgICB9PjtcbiAgICBpbml0OiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBldmVudDogYW55O1xuICAgICAgICBzbGljazogYW55O1xuICAgIH0+O1xuICAgICRpbnN0YW5jZTogYW55O1xuICAgIHByaXZhdGUgY3VycmVudEluZGV4O1xuICAgIHNsaWRlczogYW55W107XG4gICAgaW5pdGlhbGl6ZWQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfcmVtb3ZlZFNsaWRlcztcbiAgICBwcml2YXRlIF9hZGRlZFNsaWRlcztcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCB6b25lOiBOZ1pvbmUsIHBsYXRmb3JtSWQ6IHN0cmluZyk7XG4gICAgLyoqXG4gICAgICogT24gY29tcG9uZW50IGRlc3Ryb3lcbiAgICAgKi9cbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIE9uIGNvbXBvbmVudCB2aWV3IGNoZWNrZWRcbiAgICAgKi9cbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBpbml0IHNsaWNrXG4gICAgICovXG4gICAgaW5pdFNsaWNrKCk6IHZvaWQ7XG4gICAgYWRkU2xpZGUoc2xpY2tJdGVtOiBTbGlja0l0ZW1EaXJlY3RpdmUpOiB2b2lkO1xuICAgIHJlbW92ZVNsaWRlKHNsaWNrSXRlbTogU2xpY2tJdGVtRGlyZWN0aXZlKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBTbGljayBNZXRob2RcbiAgICAgKi9cbiAgICBzbGlja0dvVG8oaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgc2xpY2tOZXh0KCk6IHZvaWQ7XG4gICAgc2xpY2tQcmV2KCk6IHZvaWQ7XG4gICAgc2xpY2tQYXVzZSgpOiB2b2lkO1xuICAgIHNsaWNrUGxheSgpOiB2b2lkO1xuICAgIHVuc2xpY2soKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNsaWNrSXRlbURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgcHJpdmF0ZSBjYXJvdXNlbDtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcGxhdGZvcm1JZDogc3RyaW5nLCBjYXJvdXNlbDogU2xpY2tDYXJvdXNlbENvbXBvbmVudCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19