{"version":3,"sources":["ng://ngx-slick-carousel/slick.component.ts","ng://ngx-slick-carousel/index.ts"],"names":["SlickCarouselComponent","el","zone","platformId","this","afterChange","EventEmitter","beforeChange","breakpoint","destroy","init","currentIndex","slides","initialized","_removedSlides","_addedSlides","prototype","ngOnDestroy","unslick","ngAfterViewInit","ngAfterViewChecked","_this","isPlatformServer","length","nextSlidesLength","forEach","slickItem","push","runOutsideAngular","$instance","slick","nativeElement","idx","indexOf","filter","s","initSlick","jQuery","on","event","run","emit","config","_a","initialSlide","currentSlide","first","last","$slides","options","slidesToScroll","nextSlide","addSlide","removeSlide","slickGoTo","index","slickNext","slickPrev","slickPause","slickPlay","undefined","ngOnChanges","changes","previousValue","currentValue","refresh_1","newOptions_1","Object","assign","Component","args","selector","exportAs","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","template","ElementRef","NgZone","Inject","PLATFORM_ID","Input","Output","SlickItemDirective","carousel","ngOnInit","isPlatformBrowser","Directive","decorators","type","Host","SlickCarouselModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"iaA2DE,SAAAA,EAAoBC,EACAC,EACqBC,GAFrBC,KAAAH,GAAAA,EACAG,KAAAF,KAAAA,EACqBE,KAAAD,WAAAA,EArB7BC,KAAAC,YAA6G,IAAIC,EAAAA,aACjHF,KAAAG,aAAkG,IAAID,EAAAA,aACtGF,KAAAI,WAAwE,IAAIF,EAAAA,aAC5EF,KAAAK,QAAoD,IAAIH,EAAAA,aACxDF,KAAAM,KAAiD,IAAIJ,EAAAA,aAKzDF,KAAAO,aAAe,EAEhBP,KAAAQ,OAAgB,GAChBR,KAAAS,aAAc,EACbT,KAAAU,eAAuC,GACvCV,KAAAW,aAAqC,GAuL/C,OA1KEf,EAAAgB,UAAAC,YAAA,WACEb,KAAKc,WAGPlB,EAAAgB,UAAAG,gBAAA,WACEf,KAAKgB,sBAMPpB,EAAAgB,UAAAI,mBAAA,WAAA,IAAAC,EAAAjB,KACE,IAAIkB,EAAAA,iBAAiBlB,KAAKD,cAGtBC,KAAKW,aAAaQ,OAAS,GAAKnB,KAAKU,eAAeS,OAAS,GAAG,KAC5DC,EAAmBpB,KAAKQ,OAAOW,OAASnB,KAAKU,eAAeS,OAASnB,KAAKW,aAAaQ,OACxFnB,KAAKS,YAKsB,IAArBW,EACTpB,KAAKc,WAELd,KAAKW,aAAaU,SAAO,SAACC,GACxBL,EAAKT,OAAOe,KAAKD,GACjBL,EAAKnB,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,WAAYJ,EAAUzB,GAAG8B,qBAGlD3B,KAAKW,aAAe,GAEpBX,KAAKU,eAAeW,SAAO,SAACC,OACpBM,EAAMX,EAAKT,OAAOqB,QAAQP,GAChCL,EAAKT,OAASS,EAAKT,OAAOsB,QAAM,SAACC,GAAK,OAAAA,IAAMT,KAC5CL,EAAKnB,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,cAAeE,SAGxC5B,KAAKU,eAAiB,IAtBlBU,EAAmB,GACrBpB,KAAKgC,cA6BbpC,EAAAgB,UAAAoB,UAAA,WAAA,IAAAf,EAAAjB,KACEA,KAAKQ,OAASR,KAAKW,aACnBX,KAAKW,aAAe,GACpBX,KAAKU,eAAiB,GACtBV,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAYQ,OAAOhB,EAAKpB,GAAG8B,eAEhCV,EAAKQ,UAAUS,GAAG,QAAM,SAAGC,EAAOT,GAChCT,EAAKnB,KAAKsC,KAAG,WACXnB,EAAKX,KAAK+B,KAAK,CAAEF,MAAKA,EAAET,MAAKA,UAIjCT,EAAKQ,UAAUC,MAAMT,EAAKqB,QAE1BrB,EAAKnB,KAAKsC,KAAG,iBACXnB,EAAKR,aAAc,EAEnBQ,EAAKV,cAA0B,QAAXgC,EAAAtB,EAAKqB,cAAM,IAAAC,OAAA,EAAAA,EAAEC,eAAgB,KAG7CvB,EAAKQ,UAAUS,GAAG,eAAa,SAAGC,EAAOT,EAAOe,GAC5CxB,EAAKnB,KAAKsC,KAAG,WACTnB,EAAKhB,YAAYoC,KAAK,CAClBF,MAAKA,EACLT,MAAKA,EACLe,aAAYA,EACZC,MAAwB,IAAjBD,EACPE,KAAMjB,EAAMkB,QAAQzB,SAAWsB,EAAef,EAAMmB,QAAQC,iBAEhE7B,EAAKV,aAAekC,QAIlCxB,EAAKQ,UAAUS,GAAG,gBAAc,SAAGC,EAAOT,EAAOe,EAAcM,GAC7D9B,EAAKnB,KAAKsC,KAAG,WACXnB,EAAKd,aAAakC,KAAK,CAAEF,MAAKA,EAAET,MAAKA,EAAEe,aAAYA,EAAEM,UAASA,IAC9D9B,EAAKV,aAAewC,QAIxB9B,EAAKQ,UAAUS,GAAG,cAAY,SAAGC,EAAOT,EAAOtB,GAC7Ca,EAAKnB,KAAKsC,KAAG,WACXnB,EAAKb,WAAWiC,KAAK,CAAEF,MAAKA,EAAET,MAAKA,EAAEtB,WAAUA,UAInDa,EAAKQ,UAAUS,GAAG,WAAS,SAAGC,EAAOT,GACnCT,EAAKnB,KAAKsC,KAAG,WACXnB,EAAKZ,QAAQgC,KAAK,CAAEF,MAAKA,EAAET,MAAKA,IAChCT,EAAKR,aAAc,YAM3Bb,EAAAgB,UAAAoC,SAAA,SAAS1B,GACPtB,KAAKW,aAAaY,KAAKD,IAGzB1B,EAAAgB,UAAAqC,YAAA,SAAY3B,GACVtB,KAAKU,eAAea,KAAKD,IAMpB1B,EAAAgB,UAAAsC,UAAP,SAAiBC,GAAjB,IAAAlC,EAAAjB,KACEA,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,YAAayB,OAI/BvD,EAAAgB,UAAAwC,UAAP,WAAA,IAAAnC,EAAAjB,KACEA,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,iBAIlB9B,EAAAgB,UAAAyC,UAAP,WAAA,IAAApC,EAAAjB,KACEA,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,iBAIlB9B,EAAAgB,UAAA0C,WAAP,WAAA,IAAArC,EAAAjB,KACEA,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,kBAIlB9B,EAAAgB,UAAA2C,UAAP,WAAA,IAAAtC,EAAAjB,KACEA,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,iBAIlB9B,EAAAgB,UAAAE,QAAP,WAAA,IAAAG,EAAAjB,KACMA,KAAKyB,YACPzB,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,cAEvB1B,KAAKyB,eAAY+B,GAEnBxD,KAAKS,aAAc,GAGrBb,EAAAgB,UAAA6C,YAAA,SAAYC,GAAZ,IAAAzC,EAAAjB,KACE,GAAIA,KAAKS,YAAa,KACd6B,EAASoB,EAAgB,OAC/B,GAAIpB,EAAOqB,gBAAkBrB,EAAOsB,mBAAwCJ,IAAxBlB,EAAOsB,aAA4B,KAC/EC,EAAUvB,EAAOsB,aAAsB,QACvCE,EAAaC,OAAOC,OAAO,GAAI1B,EAAOsB,qBACrCE,EAAoB,QAE3B9D,KAAKF,KAAK0B,mBAAiB,WACzBP,EAAKQ,UAAUC,MAAM,iBAAkBoC,EAAYD,6BA5M5DI,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAU,iBACVC,UAAW,CAAC,CACVC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAU,WAAO,OAAA7E,KAC9B8E,OAAO,IAETC,SAAU,yEA7BVC,EAAAA,kBAMAC,EAAAA,uCAiDaC,EAAAA,OAAMZ,KAAA,CAACa,EAAAA,kDAtBjBC,EAAAA,2BACAC,EAAAA,6BACAA,EAAAA,2BACAA,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,UAiMLrF,sBAME,SAAAsF,EAAmBrF,EACsBE,EACboF,GAFTnF,KAAAH,GAAAA,EACsBG,KAAAD,WAAAA,EACbC,KAAAmF,SAAAA,EAc9B,OAXED,EAAAtE,UAAAwE,SAAA,WACMC,EAAAA,kBAAkBrF,KAAKD,aACzBC,KAAKmF,SAASnC,SAAShD,OAI3BkF,EAAAtE,UAAAC,YAAA,WACMwE,EAAAA,kBAAkBrF,KAAKD,aACzBC,KAAKmF,SAASlC,YAAYjD,2BAjB/BsF,EAAAA,UAASpB,KAAA,CAAC,CACTC,SAAU,8DA1OVS,EAAAA,2CA8OaE,EAAAA,OAAMZ,KAAA,CAACa,EAAAA,sBACkBnF,EAAsB2F,WAAA,CAAA,CAAAC,KAA/CC,EAAAA,UAcfP,sBC7PA,SAAAQ,KAcA,2BAdCC,EAAAA,SAAQzB,KAAA,CAAC,CACR0B,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZlG,EACAsF,GAEFa,QAAS,CACPnG,EACAsF,OAIJQ","sourcesContent":["import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\ndeclare const jQuery: any;\n\n/**\n * Slick component\n */\n@Component({\n  selector: 'ngx-slick-carousel',\n  exportAs: 'slick-carousel',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SlickCarouselComponent),\n    multi: true\n  }],\n  template: '<ng-content></ng-content>',\n})\nexport class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\n\n    @Input() config: any;\n    @Output() afterChange: EventEmitter<{ event: any, slick: any, currentSlide: number, first: boolean, last: boolean }> = new EventEmitter();\n    @Output() beforeChange: EventEmitter<{ event: any, slick: any, currentSlide: number, nextSlide: number }> = new EventEmitter();\n    @Output() breakpoint: EventEmitter<{ event: any, slick: any, breakpoint: any }> = new EventEmitter();\n    @Output() destroy: EventEmitter<{ event: any, slick: any }> = new EventEmitter();\n    @Output() init: EventEmitter<{ event: any, slick: any }> = new EventEmitter();\n\n  public $instance: any;\n\n  // access from parent component can be a problem with change detection timing. Please use afterChange output\n  private currentIndex = 0;\n\n  public slides: any[] = [];\n  public initialized = false;\n  private _removedSlides: SlickItemDirective[] = [];\n  private _addedSlides: SlickItemDirective[] = [];\n\n  /**\n   * Constructor\n   */\n  constructor(private el: ElementRef,\n              private zone: NgZone,\n              @Inject(PLATFORM_ID) private platformId: string) {\n  }\n\n  /**\n   * On component destroy\n   */\n  ngOnDestroy() {\n    this.unslick();\n  }\n\n  ngAfterViewInit(): void {\n    this.ngAfterViewChecked();\n  }\n\n  /**\n   * On component view checked\n   */\n  ngAfterViewChecked() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n      const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n      if (!this.initialized) {\n        if (nextSlidesLength > 0) {\n          this.initSlick();\n        }\n        // if nextSlidesLength is zere, do nothing\n      } else if (nextSlidesLength === 0) { // unslick case\n        this.unslick();\n      } else {\n        this._addedSlides.forEach(slickItem => {\n          this.slides.push(slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n          });\n        });\n        this._addedSlides = [];\n\n        this._removedSlides.forEach(slickItem => {\n          const idx = this.slides.indexOf(slickItem);\n          this.slides = this.slides.filter(s => s !== slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickRemove', idx);\n          });\n        });\n        this._removedSlides = [];\n      }\n    }\n  }\n\n  /**\n   * init slick\n   */\n  initSlick() {\n    this.slides = this._addedSlides;\n    this._addedSlides = [];\n    this._removedSlides = [];\n    this.zone.runOutsideAngular(() => {\n      this.$instance = jQuery(this.el.nativeElement);\n\n      this.$instance.on('init', (event, slick) => {\n        this.zone.run(() => {\n          this.init.emit({ event, slick });\n        });\n      });\n\n      this.$instance.slick(this.config);\n\n      this.zone.run(() => {\n        this.initialized = true;\n\n        this.currentIndex = this.config?.initialSlide || 0;\n      });\n\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({\n                        event,\n                        slick,\n                        currentSlide,\n                        first: currentSlide === 0,\n                        last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n                    });\n                    this.currentIndex = currentSlide;\n                });\n            });\n\n      this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n        this.zone.run(() => {\n          this.beforeChange.emit({ event, slick, currentSlide, nextSlide });\n          this.currentIndex = nextSlide;\n        });\n      });\n\n      this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n        this.zone.run(() => {\n          this.breakpoint.emit({ event, slick, breakpoint });\n        });\n      });\n\n      this.$instance.on('destroy', (event, slick) => {\n        this.zone.run(() => {\n          this.destroy.emit({ event, slick });\n          this.initialized = false;\n        });\n      });\n    });\n  }\n\n  addSlide(slickItem: SlickItemDirective) {\n    this._addedSlides.push(slickItem);\n  }\n\n  removeSlide(slickItem: SlickItemDirective) {\n    this._removedSlides.push(slickItem);\n  }\n\n  /**\n   * Slick Method\n   */\n  public slickGoTo(index: number) {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickGoTo', index);\n    });\n  }\n\n  public slickNext() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickNext');\n    });\n  }\n\n  public slickPrev() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPrev');\n    });\n  }\n\n  public slickPause() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPause');\n    });\n  }\n\n  public slickPlay() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPlay');\n    });\n  }\n\n  public unslick() {\n    if (this.$instance) {\n      this.zone.runOutsideAngular(() => {\n        this.$instance.slick('unslick');\n      });\n      this.$instance = undefined;\n    }\n    this.initialized = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.initialized) {\n      const config = changes['config'];\n      if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n        const refresh = config.currentValue['refresh'];\n        const newOptions = Object.assign({}, config.currentValue);\n        delete newOptions['refresh'];\n\n        this.zone.runOutsideAngular(() => {\n          this.$instance.slick('slickSetOption', newOptions, refresh);\n        });\n      }\n    }\n  }\n\n}\n\n@Directive({\n  selector: '[ngxSlickItem]',\n})\nexport class SlickItemDirective implements OnInit, OnDestroy {\n  constructor(public el: ElementRef,\n              @Inject(PLATFORM_ID) private platformId: string,\n              @Host() private carousel: SlickCarouselComponent) {\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.addSlide(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.removeSlide(this);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SlickCarouselComponent, SlickItemDirective} from './slick.component';\n\nexport * from './slick.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ],\n  exports: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ]\n})\nexport class SlickCarouselModule {\n}\n"]}